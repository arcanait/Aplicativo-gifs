{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","setTimeout","console","log","useFetchGifs","Fragment","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAiB5C,OACI,sBAAMC,SAXW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC6EC,UAAUH,GADvF,sBAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAM1B,MALY,CACRC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,+CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAX,GACHY,YAAW,WACPH,EAAS,CACLf,KAAMM,EACNO,SAAS,MAEd,UAEZ,CAAEpB,IAEL0B,QAAQC,IAAIN,EAAMd,MAEXc,EDf2BO,CAAc5B,GAAlCa,EAHuB,EAG7BN,KAAca,EAHe,EAGfA,QAEtB,OACI,eAAC,IAAMS,SAAP,WACI,6BAAO7B,IACLoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADAA,EAAIC,aEYtBmB,EAzBM,WAAO,IAAD,EAEa5C,mBAAS,IAFtB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAIvB,OACE,qCACE,8CACA,cAAC,EAAD,CACIA,cAAeA,IAEnB,uBACA,6BACMS,EAAWe,KAAK,SAAAT,GACd,OACI,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCb9B+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a01b7fe0.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setinputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = ( e )  => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 0 ) {\r\n            setCategories( categories => [inputValue, ...categories]);\r\n            setinputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }> \r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGift = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=dKkJHf5zWw4lN4u5mEqR99qqD5w4LZax&q=${ encodeURI(category) }&limit=10`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => { \r\n        const gif = {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n        return gif\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card-gif animate__animated animate__fadeInUp\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGift } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setimages] = useState([])\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h3 >{ category }</h3>\r\n            { loading && <p className=\"animate__animated animate__pulse\">Loading</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGift } from '../helpers/getGifs';\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGift( category )\r\n            .then( images => {\r\n                setTimeout(() => {\r\n                    setstate({\r\n                        data: images,\r\n                        loading: false\r\n                    })\r\n                }, 3000 )\r\n            });\r\n    }, [ category ])\r\n\r\n    console.log(state.data)\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from \"react\"\r\n\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([])\r\n    \r\n    return (\r\n      <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory \r\n            setCategories={setCategories}\r\n        />\r\n        <hr />\r\n        <ol>\r\n            { categories.map( category => {\r\n                return (\r\n                    <GifGrid \r\n                        key={ category }\r\n                        category={ category } \r\n                    />                \r\n                )\r\n            }) }\r\n        </ol>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}